<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>üï∏Web-Technologies on X. Angelo Huang&#39;s Blog</title>
    <link>https://flecart.github.io/tags/web-technologies/</link>
    <description>Recent content in üï∏Web-Technologies on X. Angelo Huang&#39;s Blog</description>
    <image>
      <title>X. Angelo Huang&#39;s Blog</title>
      <url>https://flecart.github.io/images/papermod-cover.png</url>
      <link>https://flecart.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://flecart.github.io/tags/web-technologies/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTML e Markup</title>
      <link>https://flecart.github.io/notes/html-e-markup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/html-e-markup/</guid>
      <description>Markup Introduzione alle funzioni del markup üü© La semantica di una parola √® caratterizzata dalla mia scelta (design sul significato). Non mi dice molto, quindi proviamo a raccontare qualcosa in pi√π.
Definiamo markup ogni mezzo per rendere esplicita una particolare interpretazione di un testo.
In particolare √® un modo per esplicitare qualche significato. (un p√≤ come la punteggiatura, che da qualche altra informazione oltre le singole parole, rende pi√π chiaro l&amp;rsquo;uso del testo).</description>
    </item>
    <item>
      <title>HTTP e REST</title>
      <link>https://flecart.github.io/notes/http-e-rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/http-e-rest/</guid>
      <description>HTTP is the acronym for HyperText Transfer Protocol.
Caratteristiche principali (3) üü® Comunicazioni fra client e server, e quanto sono comunicate le cose si chiude la connessione e ci sono politiche di caching molto bone (tipo con i proxy) Generico: perch√© √® un protocollo utilizzato per caricare moltissime tipologie di risorse! Stateless, ossia non vengono mantenute informazioni su scambi vecchi, in un certo modo ne abbiamo parlato in Sicurezza delle reti quando abbiamo parlato di firewall stateless.</description>
    </item>
    <item>
      <title>CSS</title>
      <link>https://flecart.github.io/notes/css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/css/</guid>
      <description>Cascading Style Sheets Inizialmente HTML era per la presentazione, abbiamo ancora un p√≤ di attributi storici e tag storici per questa parte di presentazione descritto in HTML e Markup.
Introduzione √à un linguaggio indipendente per la descrizione della grafica. La cosa bella √® iil fatto di essere indipendente, quindi √® adatto a HTML, a XML e simili.
Una cosa particolare √® il cascading quindi il fatto che dichiarazioni pi√π nuove sovrascrivano o espandino dichiarazione vecchie.</description>
    </item>
    <item>
      <title>Javascript</title>
      <link>https://flecart.github.io/notes/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/javascript/</guid>
      <description>Javascript Obiettivo principale √® esegurie codice clientside
Un p√≤ di storia nato all‚Äôinizio della prima guerra dei browser (da netscape, explorer √® in visual basic comunque non compatibile con JS) come il fratellino di java nel senso che runnava ovunque, attualmente √® ECMAScript, ed √® la versione migliore. (era pensato per fare microscript!)
ECMAScript quando √® nato √® il nucleo a tutte le implementazioni JS eseistenti fino a quel momento (che √® stato molto caotico!</description>
    </item>
    <item>
      <title>Codifica dei caratteri</title>
      <link>https://flecart.github.io/notes/codifica-dei-caratteri/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/codifica-dei-caratteri/</guid>
      <description>Introduzione sull&amp;rsquo;encoding Ossia trattiamo metodi per codificare caratteri dei linguaggi umani, come ASCII, UCS e UTF.
Digitalizzare significa encodarlo in un sistema che possa essere memorizzato su un dispositivo di memorizzazione elettronico. Ovviamente non possiamo mantenere l&amp;rsquo;informazione cos√¨ come √®, ma vogliamo memorizzarne una forma equivalente, ma pi√π facile da manipolare dal punto di vista del computer. Creiamo quindi un mapping, o anche isomorfismo tra il valore di mappatura (o encoding), solitamente un valore numerico, tra il singolo valore atomico originale e il numero.</description>
    </item>
    <item>
      <title>Cookie e autenticazione</title>
      <link>https://flecart.github.io/notes/cookie-e-autenticazione/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/cookie-e-autenticazione/</guid>
      <description>Cookies Gli utilizzi pi√π soliti sono per Autenticazione e per Autorizzazione, perch√© sono delle informazioni che il server genera e mette al client, come se fossero dei segreti cifrati.
Cookie Questi sono una estensione di netscape, che si appoggiano al protocollo HTTP per implementare certe funzionalit√† (soprattutto il fatto di essere stateless, quindi √® utile per avere informazioni sugli stati su qualcosa.)
Slide cookie
Vengon utilizzati header specifici per settare il cookie.</description>
    </item>
    <item>
      <title>Storia del web</title>
      <link>https://flecart.github.io/notes/storia-del-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/storia-del-web/</guid>
      <description>Guerre dei browser Prima guerra ~1995
Fra netscape, una forma di rete (?) che poi viene ripresa da firefox da Mozilla, dopo che √® stato mandato in bancarotta da Microsoft (che ha ancora con IE una grandissima fetta del mercato in questo primo periodo).
Secondo periodo di guerra ~2010
Quando arriva chrome, che vuole creare un browser che risolva tutti i problemi per creare integrazioni sui browser di altre aziende), mentre IE ha perso interesse per nuove features, che in questo periodo sono capi del proprio mercato.</description>
    </item>
    <item>
      <title>Ambienti di sviluppo</title>
      <link>https://flecart.github.io/notes/ambienti-di-sviluppo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/ambienti-di-sviluppo/</guid>
      <description>Ambienti di sviluppo Ambiente di sviluppo √® diverso rispetto all‚Äôambiente di deploy! bisognare fare delle differenze, sono dell macchine diverse, in questa sezione di documenti andiamo a parlare di norme e modi di lavorare per facilitare il metodo di sviluppo.
Note di compatibilit√† Front-end Le compatibilit√†, soprattutto per cose browser (quindi front-end) cambiano molto spesso, come fare a trackare queste cose? C&amp;rsquo;√® un sito molto carino come https://caniuse.com/ .
La browser list, √® utilizzata per specificare unt browser di target per la nostra applicazione, non ho capito bene cosa serve.</description>
    </item>
    <item>
      <title>Accessibilit√†</title>
      <link>https://flecart.github.io/notes/accessibilit%C3%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/accessibilit%C3%A0/</guid>
      <description>Ci chiediamo come facciamo a rendere sistemi informatici accessibili a persone attraverso certe tecnologie.
Slide esempi di disabilit√†
√à meglio renderlo accessibile perch√© √® illegale (nel senso che stai facendo una discriminazione verso un certo insieme di persone).
WGAC Queste sono alcuni principi di accessibilit√†, basati su 4 principi fondamentali
4 principi del WGAC POUR per facilit√† di ricordarsi
Perceivable (che ci siano le informazioni necessarie per l&amp;rsquo;accessibilit√†) Operable Understandable Robus Linguaggio Il tag del linguaggio √® utilizzato per sapere in che accento leggere e dare gli ordini.</description>
    </item>
    <item>
      <title>Metadati web e web semantico</title>
      <link>https://flecart.github.io/notes/metadati-web-e-web-semantico/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/metadati-web-e-web-semantico/</guid>
      <description>Metadati web https://csunibo.github.io/tecnologie-web/lucidi/teoria/23-metadati.pdf https://csunibo.github.io/tecnologie-web/lucidi/teoria/24-a-web-semantico-lod-rdf-json-ld.pdf
inconfrontabilit√† del sapere Stessa informazione in forme diverse Stessa parola per cose diversa. Serializzazione La semantica √® relegata alle applicazioni che devono decidere in che modo interpretarli, oppure esseri umani.
PICS Platform for Internet Content Selection vuole cercare di tenere sotto controllo i materiali del film. √à un sistema di rating. ‚Üí tanti criteri di classificazione a seconda dei criteri ideologici su cui voglio andare a basarmi.</description>
    </item>
    <item>
      <title>Uniform Resource Identifier</title>
      <link>https://flecart.github.io/notes/uniform-resource-identifier/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/uniform-resource-identifier/</guid>
      <description>URI Sono stata LA vera invenzione di Berners Lee accennati in Storia del web. Il problema √® avere un modo per identificare una risorsa in modo univoco sull‚Äôinternet.
Introduzione La risorsa üü© Una risorsa √® qualunque struttura che sia oggetto di scambio tra applicazioni all‚Äôinterno del World Wide Web.
Ora una risorsa pu√≤ essere qualunque cosa, non solamente solo un file! Quindi √® agnostico rispetto a contenuto oppure metodo di memorizzazione del dato, appare anche in questo ambiente importante vedere quanto siano importanti standard che permettano una comunicazione</description>
    </item>
  </channel>
</rss>
