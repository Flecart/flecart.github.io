<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Nlp on X. Angelo Huang&#39;s Blog</title>
    <link>https://flecart.github.io/tags/nlp/</link>
    <description>Recent content in Nlp on X. Angelo Huang&#39;s Blog</description>
    <image>
      <title>X. Angelo Huang&#39;s Blog</title>
      <url>https://flecart.github.io/images/papermod-cover.png</url>
      <link>https://flecart.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://flecart.github.io/tags/nlp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bag of words</title>
      <link>https://flecart.github.io/notes/bag-of-words/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/bag-of-words/</guid>
      <description>Introduzione a bag of words Faremo una introduzione di applicazione di NaÃ¯ve Bayes applicato alla classificazione di documenti.
Setting del problema ðŸŸ¨+ Questo Ã¨ una parte che Ã¨ importante nel caso volessimo fare document classification. e simili, In questa brevissima introduzione cerchiamo di calcolare $$ \theta_{i, \text{word}, l} = P(X_{i} = \text{word} | Y = l) $$ Ossia quanto Ã¨ probabile che una parola sia word, che appaia alla posizione i, data la categoria $l$ del documento Assumendo che non dipenda dalla posizione posso solamente contare le parole per documento fregandomene della posizione, questa Ã¨ l&amp;rsquo;idea che ha portato ai primi approcci in questo campo.</description>
    </item>
  </channel>
</rss>
