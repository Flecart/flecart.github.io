<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>üìôBasi-Di-Dati on X. Angelo Huang&#39;s Blog</title>
    <link>https://flecart.github.io/tags/basi-di-dati/</link>
    <description>Recent content in üìôBasi-Di-Dati on X. Angelo Huang&#39;s Blog</description>
    <image>
      <title>X. Angelo Huang&#39;s Blog</title>
      <url>https://flecart.github.io/images/papermod-cover.png</url>
      <link>https://flecart.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://flecart.github.io/tags/basi-di-dati/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Index, B-trees and hashes</title>
      <link>https://flecart.github.io/notes/index-b-trees-and-hashes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/index-b-trees-and-hashes/</guid>
      <description>Indexes Trattiamo qui di alcuni metodi che sono utilizzati per costruire indici
Introduction to indexes Gli indici sono una struttura di dati aggiuntiva che ci permette di ricercare pi√π in fretta alcuni valori per le queries. In questa sezione proviamo ad approfondire in che modo possono essere costruite e gestite.
Search keys üü© Sono in breve la cosa che vogliamo andare a cercare. Solitamente sono nella forma &amp;lt;key, label&amp;gt;, che ci permette di trovare in fretta il label, che si potrebbe intendere come il valore che noi stiamo provando a cercare.</description>
    </item>
    <item>
      <title>Relational Model</title>
      <link>https://flecart.github.io/notes/relational-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/relational-model/</guid>
      <description>This is the classical format that we encounter, it is the format used for relational databases introduced in databases course introduction, introduced in (Codd 1970).
Introduzione, i modelli di dati Lista modelli di dati (4) Nel tempo sono stati sviluppati molti modelli di dati:
Relational Data Model: This is the most common data model and uses tables to represent data. It organizes data into rows and columns, where each row represents a record, and each column represents an attribute of that record.</description>
    </item>
    <item>
      <title>Design del database</title>
      <link>https://flecart.github.io/notes/design-del-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/design-del-database/</guid>
      <description>Processo design del database Il design Some design steps (3) (non impo) How to gather requirements? üü®+ Come si pu√≤ raccogliere i dati degli utilizzatori?
parlare col il personale che dovr√† utilizzare questi sistemi Documentazione esistente Interview di persone che dovr√† utilizzare queste risorse O Moduli per fare sampling Top-down approach La cosa brutta √® che questi requisiti non possono essere standardizzati, ci sono molte necessit√†, molto diverse fra i loro, quindi √® utile andare a parlare con gli esperti e capire cosa abbiano bisogno per i dati.</description>
    </item>
    <item>
      <title>Database logical design</title>
      <link>https://flecart.github.io/notes/database-logical-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/database-logical-design/</guid>
      <description>Introduzione al design logico Conoscenze sul carico dell&amp;rsquo;applicazione, ossia se ha pi√π read rispetto a writes per esempio, sono dei priors in pratica Un design concettuale spiegato in precedenza. E si avr√† in output un design logico con anche un po&amp;rsquo; di documentazione. bisogna in questa fase valutare la performance principalmente su indicatori, ossia una operazione quante istanze visiter√†? Invece di garanzie sul numero di transazioni al secondo.
Indicatori visti (2) Costo di una operazione: viene valutato in termini di numero di occorrenze di entit√† e associazioni che mediamente vanno visitate per rispondere a una operazione sulla base d√¨ dati; questa schematizzazione √® molto forte e, pur nelle semplici valutazioni che svilupperemo, sar√† talvolta necessario riferirci a un criterio pi√π fine; Occupazione di memoria: viene valutato in termini dello spazio di memoria (misurato per esempio in numero di byte) necessario per memorizzare i dati descritti dallo schema.</description>
    </item>
    <item>
      <title>Structured Query Language</title>
      <link>https://flecart.github.io/notes/structured-query-language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/structured-query-language/</guid>
      <description>Little bits of history It was invented in 1970 in Almaden (San Jose) by IBM (Don Chamberlin, Raymond Boyce worked on this) for the first relational database, called system R. Then for copyright issues it hasn&amp;rsquo;t been called SEQUEL, so they branded it as SQL.
SQL is a declarative language With declaratives language there is a separation between what I call the intentionality and the actual process. In declarative languages we just say what we want the result to be, and don&amp;rsquo;t care what the actual implementation is like.</description>
    </item>
    <item>
      <title>Introduction to databases</title>
      <link>https://flecart.github.io/notes/introduction-to-databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/introduction-to-databases/</guid>
      <description>Basi di dati Cosa √® un database? (2) üü© Si potrebbe intendere come un insieme di dati strutturato, utili per certi obiettivi di enterprise, aziende pubbliche o simili (uno delle necessit√† che la rivoluzione informatica ha pi√π contribuito diciamo.)
Un altro significato pi√π importante √®
Un insieme di dati gestito da un Database Management System
Tristemente con questa definizione anche excel √® un DBMS&amp;hellip;
Solitamente sono utilizzati per gestire grandi quantit√† di dati.</description>
    </item>
    <item>
      <title>Normalizzazione dei database</title>
      <link>https://flecart.github.io/notes/normalizzazione-dei-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/normalizzazione-dei-database/</guid>
      <description>Introduzione alla normalizzazione Perch√© si normalizza? üü© Cercare di aumentare la qualit√† del nostro database, perch√© praticamente andiamo a risolvere delle anomalie possibili al nostro interno, e questo aiuta per la qualit√†. Solitamente queste anomalie sono interessanti per sistemi write intensive, in cui vogliamo mantenere i nostri dati in una forma buona. Per√≤ capita non raramente che vogliamo solamente leggere. In quei casi sistemi come Cloud Storage, Distributed file systems potrebbero risultare pi√π effettivi.</description>
    </item>
    <item>
      <title>Relational Algebra</title>
      <link>https://flecart.github.io/notes/relational-algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/relational-algebra/</guid>
      <description>Introduzione all&amp;rsquo;algebra relazionale Confronto con relazioni matematiche Le relazioni come le intendiamo in database sono leggermente diverse rispetto a quelle presenti per le relazioni matematiche:
Non conta l&amp;rsquo;ordine Ci sono gli attributi Per il resto se introduciamo questo sistema per tenere conto delle astrazioni, possiamo analizzarle matematicamente, e questo ci fornisce qualche sicurezza in pi√π diciamo.
Definition of tuples üü© Le relazioni sono esattamente quelle definite in matematica, per√≤ noi aggiungiamo anche gli attributi, in modo da poter considerare l&amp;rsquo;ordine delle colonne non importante.</description>
    </item>
    <item>
      <title>Advanced SQL</title>
      <link>https://flecart.github.io/notes/advanced-sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/advanced-sql/</guid>
      <description>Check function A volte pu√≤ essere molto pesante, perch√©
What does check do? Viene utilizzato per introdurre un constraint check per avere sicurezza su un range. Check e innestamenti üü©- Pu√≤ essere che certe implementazioni non permettano il check innestato, questo √® una cosa molto pesante, perch√© ogni modifica deve andare a rifare la modifica ai subalterni, quindi questo √® pesante pesante.
Assertions üü©&amp;ndash; Sono dei check fatti al livello dello schema, quindi valgono sempre, e possono essere riutilizzati in table diversi credo.</description>
    </item>
    <item>
      <title>The Database Management System</title>
      <link>https://flecart.github.io/notes/the-database-management-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/the-database-management-system/</guid>
      <description>Struttura del DBMS Introduzione ai DBMS Schema riassuntivo #### Operazioni classiche Ci stiamo chiedendo, come facciamo a descrivere i processi che portano alla comprensione della query e della retrieval degli elementi utili? Questo deve fare il DBMS, ossia capace di - Aggiornare tuple - Trovare tuple - Gestire gli accessi - Gestire accessi concorrenti? ### Query processor #### Query compiler (3) üü© - Parsing (crea l&#39;albero di derivazione per la nostra query) - Pre-processing (fa check semantici sulla query) - Optimization, si occupa lui di migliorare L&#39;ottimizzazione #### Execution engine üü© Esegue l&#39;effettiva computazione per la query, ed √® il punto d&#39;incontro col resto (indexes, e logging per dire) Esegue il piano di esecuzione che probabilmente un livello superiore ha calcolato Interagisce con tutti gli altri componenti del db (ad esempio Log per transazioni e durabilit√†, buffer e scheduler delle operazioni prolly).</description>
    </item>
  </channel>
</rss>
