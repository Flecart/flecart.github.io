<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Software-Engineering on X. Angelo Huang&#39;s Blog</title>
    <link>https://flecart.github.io/tags/software-engineering/</link>
    <description>Recent content in Software-Engineering on X. Angelo Huang&#39;s Blog</description>
    <image>
      <title>X. Angelo Huang&#39;s Blog</title>
      <url>https://flecart.github.io/images/papermod-cover.png</url>
      <link>https://flecart.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <atom:link href="https://flecart.github.io/tags/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Design patterns</title>
      <link>https://flecart.github.io/notes/design-patterns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/design-patterns/</guid>
      <description>&lt;h3 id=&#34;introduction-to-design-patterns&#34;&gt;Introduction to design patterns&lt;/h3&gt;
&lt;p&gt;Tutte le immagini qui presenti sono prese da &lt;a href=&#34;https://refactoring.guru/.&#34;&gt;&lt;a href=&#34;https://refactoring.guru/&#34;&gt;https://refactoring.guru/&lt;/a&gt;.&lt;/a&gt; Quello Ã¨ il sito principale da tenere come reference.&lt;/p&gt;
&lt;h4 id=&#34;introduzione-personale-&#34;&gt;Introduzione personale ðŸŸ©&lt;/h4&gt;
&lt;p&gt;I design patterns sono simili a dei &lt;em&gt;plug and play&lt;/em&gt;, ossia delle &lt;strong&gt;soluzioni che hanno funzionato bene&lt;/strong&gt; in passato e che sono ora riutilizzati.
Solitamente dovrebbe essere una &lt;strong&gt;abilitÃ  implicita&lt;/strong&gt;, cioÃ¨ un buon programmatore Ã¨ in grado di fare senza pensarci, dovrebbe essere automatico. Infatti quando uno fa il design non lo fa esplitamente seguendo un certo modello, ma farlo solitamente risulta utile per guidare il processo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>General SWE principles</title>
      <link>https://flecart.github.io/notes/general-swe-principles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/general-swe-principles/</guid>
      <description>&lt;p&gt;This small note sections tries to fix 5 important concepts in software engineering&lt;/p&gt;
&lt;h3 id=&#34;sub-system-and-modules-&#34;&gt;Sub-system and modules ðŸŸ©&lt;/h3&gt;
&lt;p&gt;We need to differentiate from sub-system, which is a part of a system that tries to achieve some objective, and a &lt;strong&gt;module&lt;/strong&gt;, which is more &lt;em&gt;language specific&lt;/em&gt; way of saying imported file, or set of functions or classes.&lt;/p&gt;
&lt;h3 id=&#34;information-hiding-&#34;&gt;Information hiding ðŸŸ©&lt;/h3&gt;
&lt;p&gt;This is a very important principle present in &lt;a href=&#34;https://flecart.github.io/notes/classi-oop-&#34;&gt;object oriented programming&lt;/a&gt;.
Within this philosophy we should &lt;strong&gt;be able to access only public&lt;/strong&gt; methods or data, this allows the construction of &lt;em&gt;abstractions&lt;/em&gt; that allow us to think at a higher level.&lt;/p&gt;</description>
    </item>
    <item>
      <title>La qualitÃ  del software</title>
      <link>https://flecart.github.io/notes/la-qualit%C3%A0-del-software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/la-qualit%C3%A0-del-software/</guid>
      <description>&lt;p&gt;Dato che il software sta diventando sempre piÃ¹ diffuso, diventa sempre piÃ¹ importante andare a definire delle metriche che possano garantirne la qualitÃ , ossia la non frequenza di errori o bug che possono in qualche modo limitarne la qualitÃ .&lt;/p&gt;
&lt;h4 id=&#34;error-fault-and-failure&#34;&gt;Error, Fault and Failure&lt;/h4&gt;
&lt;p&gt;Secondo la definizione esatta data da IEEE, questi tre termini hanno un significato ben specifico, molto diverso.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Error, sono comportamenti non previsti da un comportamento dell&amp;rsquo;utente, oppure il programmatore capisce male le specifiche.&lt;/li&gt;
&lt;li&gt;Fault sono i bugs, degli errori nel codice che creano un comportamento non previsto&lt;/li&gt;
&lt;li&gt;Failure, sono comportamenti non previsti da specifiche, che crea un &lt;strong&gt;guasto&lt;/strong&gt; e non permette il funzionamento&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;qualitÃ -del-software&#34;&gt;QualitÃ  del software&lt;/h3&gt;
&lt;h4 id=&#34;rating-and-ranking&#34;&gt;Rating and Ranking&lt;/h4&gt;
&lt;p&gt;Il rating Ã¨ l&amp;rsquo;assegnazione di un punteggio assoluto di qualitÃ  riguardo al prodotto.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modelli AGILE</title>
      <link>https://flecart.github.io/notes/modelli-agile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/modelli-agile/</guid>
      <description>&lt;h3 id=&#34;socialitÃ -dello-sviluppo-del-software-3--&#34;&gt;SocialitÃ  dello sviluppo del software (3) ðŸŸ¨-&lt;/h3&gt;
&lt;p&gt;Si assume che&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ãˆ difficile assegnarsi i compiti, bisogni di utenti, tempi di consegna (+ persone difficile)&lt;/li&gt;
&lt;li&gt;Ãˆ facile scrivere software (almeno software classico, e non computazione scientifica)&lt;/li&gt;
&lt;li&gt;La gente sia brava tecnicamente che socialmente Ã¨ una cosa rara&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vs-waterfall-3-&#34;&gt;VS Waterfall (3) ðŸŸ¨++&lt;/h3&gt;
&lt;p&gt;Pianificare tutto come viene descritto nel modello del waterfall non Ã¨ possibile.
Per i seguenti motivi&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Non Ã¨ chiaro cosa vuole l&amp;rsquo;utente finale (quindi sarebbe meglio avere feedback continuo).&lt;/li&gt;
&lt;li&gt;Non si sa giÃ  dall&amp;rsquo;inizio cosa Ã¨ che interessa all&amp;rsquo;utente, per questo motivo si consegna il prodotto passo passo per &lt;strong&gt;feedback continuo&lt;/strong&gt; dato che i requisiti cambiano nel tempo.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;giustificazione-agile-alto-livello-&#34;&gt;Giustificazione agile alto livello ðŸŸ©&lt;/h4&gt;
&lt;p&gt;Vorremo una metodologia che permetta una &lt;strong&gt;iterazione&lt;/strong&gt; ossia un cambio continuo specifiche in funzione di un &lt;strong&gt;utente&lt;/strong&gt;, vogliamo fare le cose a seconda di quanto vuole l&amp;rsquo;utente.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modelli Lineari di sviluppo</title>
      <link>https://flecart.github.io/notes/modelli-lineari-di-sviluppo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/modelli-lineari-di-sviluppo/</guid>
      <description>&lt;h2 id=&#34;introduzione-ai-modelli-lineari&#34;&gt;Introduzione ai modelli lineari&lt;/h2&gt;
&lt;h3 id=&#34;processi-di-sviluppo&#34;&gt;Processi di sviluppo&lt;/h3&gt;
&lt;h4 id=&#34;definizione&#34;&gt;Definizione&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Lâ€™insieme strutturato di attivitÃ , eventi, documenti e procedure necessari per la costruzione di un sistema software&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;cosa-viene-descritto-4-&#34;&gt;Cosa viene descritto (4) ðŸŸ©&lt;/h4&gt;
&lt;p&gt;Questo Ã¨ proprio quanto vuole studiare l&amp;rsquo;ingegneria del software -&amp;gt; &lt;strong&gt;metodi di sviluppo&lt;/strong&gt;, in modo da portare i migliori risultati possibile.&lt;/p&gt;
&lt;p&gt;Nella formazione classica va a definire 4 concetti (soprattutto utili nel lavoro di gruppo, al fine di comunicare nella maniera piÃ¹ efficace):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Requisiti e backlog del software</title>
      <link>https://flecart.github.io/notes/requisiti-e-backlog-del-software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/requisiti-e-backlog-del-software/</guid>
      <description>&lt;h2 id=&#34;introduzione-sui-requisiti-del-software&#34;&gt;Introduzione sui requisiti del software&lt;/h2&gt;
&lt;h3 id=&#34;note-introduttive&#34;&gt;Note introduttive&lt;/h3&gt;
&lt;h4 id=&#34;in-linguaggio-naturale-dizionario-&#34;&gt;In linguaggio naturale (dizionario) ðŸŸ¥+&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Sono tutte le &lt;strong&gt;qualitÃ  necessarie&lt;/strong&gt; per &lt;em&gt;uno scopo ben determinato&lt;/em&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Secondo il prof. I requisiti sono dei &lt;strong&gt;desideri&lt;/strong&gt; ossia ciÃ² che idealmente vorresti riguardo qualcosa (nel nostro caso il software). Ma credo sia anche una tendenza italiana di fare le cose meglio possibile senza mai soddisfare tutto&lt;/p&gt;
&lt;h4 id=&#34;functional-requirements-&#34;&gt;Functional requirements ðŸŸ©&lt;/h4&gt;
&lt;p&gt;Sono &lt;strong&gt;ciÃ² che permetterÃ  di fare il sistema&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scrum Method</title>
      <link>https://flecart.github.io/notes/scrum-method/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/scrum-method/</guid>
      <description>&lt;h3 id=&#34;introduzione-idea-principale&#34;&gt;Introduzione (idea principale)&lt;/h3&gt;
&lt;h4 id=&#34;in-breve-essence-card--&#34;&gt;In breve: essence card ðŸŸ©-&lt;/h4&gt;
&lt;img src=&#34;https://flecart.github.io/images/notes/Scrum Method-1697470925893.jpeg&#34; style=&#34;width: 100%&#34; class=&#34;center&#34; alt=&#34;Scrum Method-1697470925893&#34;&gt;
Giallo = Prodotto.
&lt;h4 id=&#34;metafora-staffetta-rugby-&#34;&gt;Metafora staffetta-rugby ðŸŸ©&lt;/h4&gt;
&lt;img src=&#34;https://flecart.github.io/images/notes/Scrum Method-1697097959678.jpeg&#34; style=&#34;width: 100%&#34; class=&#34;center&#34; alt=&#34;Scrum Method-1697097959678&#34;&gt;
&lt;p&gt;Con altri metodi si fanno produzioni stile &lt;em&gt;staffetta&lt;/em&gt;, ossia un membro sta fermo, finchÃ© non ha il testimone e poi si uccide correndo&amp;hellip;
Il metodo piÃ¹ utile ispirato a scrum Ã¨ rugby, che tutti si muovo insieme collaborando.
&lt;strong&gt;Un po&amp;rsquo; di tutto Ã¨ fatto&lt;/strong&gt; durante lo sprint&lt;/p&gt;
&lt;h4 id=&#34;cicli-di-base-3-&#34;&gt;Cicli di base (3) ðŸŸ©&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Planning&lt;/strong&gt;: in cui vengono scelti i task da eseguire durante questo sprint, solitamente questo viene preso da un &lt;em&gt;subset&lt;/em&gt; dei task descritti dal product owner.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Execution&lt;/strong&gt;: questo Ã¨ abbastanza chiaro, si sviluppa.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Retrospective and review&lt;/strong&gt;: in cui vengono identificati i problemi che sono stati incontrati durante lo sviluppo, e modi possibili per risolverli.
!&lt;a href=&#34;https://flecart.github.io/notes/scrum-method-1697098147819.jpeg-&#34;&gt; 500&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;lo-sprint-3--&#34;&gt;Lo sprint (3) ðŸŸ©-&lt;/h4&gt;
&lt;p&gt;Una cosa molto importante che aiuterÃ  di gran lunga lo sviluppo Ã¨ la &lt;strong&gt;costanza&lt;/strong&gt; che
&lt;img src=&#34;https://flecart.github.io/images/notes/Scrum Method-1697098373334.jpeg&#34; style=&#34;width: 100%&#34; class=&#34;center&#34; alt=&#34;Scrum Method-1697098373334&#34;&gt;
Si scelgono&lt;/p&gt;</description>
    </item>
    <item>
      <title>System Design</title>
      <link>https://flecart.github.io/notes/system-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/system-design/</guid>
      <description>&lt;p&gt;NOTA: tolgo dalle note perchÃ© non mi sembra importante.&lt;/p&gt;
&lt;h3 id=&#34;introduction-to-system-design&#34;&gt;Introduction to system design&lt;/h3&gt;
&lt;h4 id=&#34;packages-vs-diagrams--&#34;&gt;Packages vs diagrams ðŸŸ©-&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Packages &lt;strong&gt;fisica implementazione&lt;/strong&gt;, perchÃ© Ã¨ una cosa utile per lo sviluppo&lt;/li&gt;
&lt;li&gt;Diagrams &lt;strong&gt;logica visualizzazione&lt;/strong&gt; perchÃ© aiuta solamente a comprendere meglio come funziona il sistema in toto.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;components&#34;&gt;Components&lt;/h3&gt;
&lt;h4 id=&#34;what-is-a-component-3-&#34;&gt;What is a component (3) ðŸŸ¨&lt;/h4&gt;
&lt;p&gt;Ãˆ una &lt;strong&gt;entitÃ  totalmente indipendente&lt;/strong&gt; che funziona a sÃ©, un esempio Ã¨ il &lt;em&gt;dll, dynamically loaded libraries&lt;/em&gt; presente nei sistemi di windows.
Una cosa Ã¨ che &lt;strong&gt;espongono interfacce&lt;/strong&gt; per interagirci, e questi possono essere utilizzati per creare sistemi complessi.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unified Modeling Language</title>
      <link>https://flecart.github.io/notes/unified-modeling-language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://flecart.github.io/notes/unified-modeling-language/</guid>
      <description>&lt;h4 id=&#34;cosa-Ã¨&#34;&gt;Cosa Ã¨&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;UML&lt;/strong&gt; Ã¨ un linguaggio di modelling (molto vecchio) ma ancora di continua evoluzione, da
un punto di vista storico Ã¨ nato insieme ai concetti di &lt;strong&gt;Object Oriented Programming&lt;/strong&gt; che ora Ã¨ molto presente all&amp;rsquo;interno dell&amp;rsquo;industria, descritto bene in &lt;a href=&#34;https://flecart.github.io/notes/classi-oop&#34;&gt;Classi OOP&lt;/a&gt;, anche se in questa occasione sviluppata in maniera molto piÃ¹ intuitiva (grafica).&lt;/p&gt;
&lt;h4 id=&#34;perchÃ©-serve-&#34;&gt;PerchÃ© serve ðŸŸ©&lt;/h4&gt;
&lt;p&gt;Per cercare di &lt;strong&gt;comunicare&lt;/strong&gt; quanto necessario riguardo struttura e dinamicitÃ  dell&amp;rsquo;architettura.&lt;/p&gt;
&lt;h3 id=&#34;struttura-di-uml&#34;&gt;Struttura di UML&lt;/h3&gt;
&lt;h4 id=&#34;structural-diagram-&#34;&gt;Structural Diagram ðŸŸ¨++&lt;/h4&gt;
&lt;p&gt;These diagrams focus on representing the &lt;strong&gt;static structure of a system&lt;/strong&gt;. They help depict the components, classes, objects, and their relationships in a system. Some common structural diagrams in UML include:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
